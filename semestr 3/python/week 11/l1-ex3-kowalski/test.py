from src_redone import *
import unittest


class Test(unittest.TestCase):
    def test_basic(self):
        tests = [
            ((3, 5, 2, 4),
             ('    3  4  5\n'
              ' 2  6  8 10\n'
              ' 3  9 12 15\n'
              ' 4 12 16 20\n')),

            ((10, 20, 0, 10),
             ('     10  11  12  13  14  15  16  17  18  19  20\n'
              '  0   0   0   0   0   0   0   0   0   0   0   0\n'
              '  1  10  11  12  13  14  15  16  17  18  19  20\n'
              '  2  20  22  24  26  28  30  32  34  36  38  40\n'
              '  3  30  33  36  39  42  45  48  51  54  57  60\n'
              '  4  40  44  48  52  56  60  64  68  72  76  80\n'
              '  5  50  55  60  65  70  75  80  85  90  95 100\n'
              '  6  60  66  72  78  84  90  96 102 108 114 120\n'
              '  7  70  77  84  91  98 105 112 119 126 133 140\n'
              '  8  80  88  96 104 112 120 128 136 144 152 160\n'
              '  9  90  99 108 117 126 135 144 153 162 171 180\n'
              ' 10 100 110 120 130 140 150 160 170 180 190 200\n'))
        ]

        for test in tests:
            self.assertEqual(multiplication_table(*test[0]), test[1])

    def test_negative(self):
        tests = [
            ((-10, 10, -1, 7),
             ('    -10  -9  -8  -7  -6  -5  -4  -3  -2  -1'
              '   0   1   2   3   4   5   6   7   8   9  10\n'
              ' -1  10   9   8   7   6   5   4   3   2   1'
              '   0  -1  -2  -3  -4  -5  -6  -7  -8  -9 -10\n'
              '  0   0   0   0   0   0   0   0   0   0   0'
              '   0   0   0   0   0   0   0   0   0   0   0\n'
              '  1 -10  -9  -8  -7  -6  -5  -4  -3  -2  -1'
              '   0   1   2   3   4   5   6   7   8   9  10\n'
              '  2 -20 -18 -16 -14 -12 -10  -8  -6  -4  -2'
              '   0   2   4   6   8  10  12  14  16  18  20\n'
              '  3 -30 -27 -24 -21 -18 -15 -12  -9  -6  -3'
              '   0   3   6   9  12  15  18  21  24  27  30\n'
              '  4 -40 -36 -32 -28 -24 -20 -16 -12  -8  -4'
              '   0   4   8  12  16  20  24  28  32  36  40\n'
              '  5 -50 -45 -40 -35 -30 -25 -20 -15 -10  -5'
              '   0   5  10  15  20  25  30  35  40  45  50\n'
              '  6 -60 -54 -48 -42 -36 -30 -24 -18 -12  -6'
              '   0   6  12  18  24  30  36  42  48  54  60\n'
              '  7 -70 -63 -56 -49 -42 -35 -28 -21 -14  -7'
              '   0   7  14  21  28  35  42  49  56  63  70\n')),

            ((-5, 3, 0, 0),
             ('   -5 -4 -3 -2 -1  0  1  2  3\n'
              ' 0  0  0  0  0  0  0  0  0  0\n'))
        ]

        for test in tests:
            self.assertEqual(multiplication_table(*test[0]), test[1])

    def test_edge(self):
        tests = [
            ((5, 0, 0, 5), '  \n 0\n 1\n 2\n 3\n 4\n 5\n'),
            ((10, -10, 10, -10), '    \n')
        ]

        for test in tests:
            self.assertEqual(multiplication_table(*test[0]), test[1])


if __name__ == "__main__":
    unittest.main()
