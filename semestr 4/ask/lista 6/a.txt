
a.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	callq  *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 a2 2f 00 00    	pushq  0x2fa2(%rip)        # 3fc8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 a3 2f 00 00 	bnd jmpq *0x2fa3(%rip)        # 3fd0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)

Disassembly of section .plt.got:

0000000000001030 <__cxa_finalize@plt>:
    1030:	f3 0f 1e fa          	endbr64 
    1034:	f2 ff 25 bd 2f 00 00 	bnd jmpq *0x2fbd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    103b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001040 <_start>:
    1040:	f3 0f 1e fa          	endbr64 
    1044:	31 ed                	xor    %ebp,%ebp
    1046:	49 89 d1             	mov    %rdx,%r9
    1049:	5e                   	pop    %rsi
    104a:	48 89 e2             	mov    %rsp,%rdx
    104d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1051:	50                   	push   %rax
    1052:	54                   	push   %rsp
    1053:	4c 8d 05 56 02 00 00 	lea    0x256(%rip),%r8        # 12b0 <__libc_csu_fini>
    105a:	48 8d 0d df 01 00 00 	lea    0x1df(%rip),%rcx        # 1240 <__libc_csu_init>
    1061:	48 8d 3d 53 01 00 00 	lea    0x153(%rip),%rdi        # 11bb <main>
    1068:	ff 15 72 2f 00 00    	callq  *0x2f72(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    106e:	f4                   	hlt    
    106f:	90                   	nop

0000000000001070 <deregister_tm_clones>:
    1070:	48 8d 3d 99 2f 00 00 	lea    0x2f99(%rip),%rdi        # 4010 <__TMC_END__>
    1077:	48 8d 05 92 2f 00 00 	lea    0x2f92(%rip),%rax        # 4010 <__TMC_END__>
    107e:	48 39 f8             	cmp    %rdi,%rax
    1081:	74 15                	je     1098 <deregister_tm_clones+0x28>
    1083:	48 8b 05 4e 2f 00 00 	mov    0x2f4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    108a:	48 85 c0             	test   %rax,%rax
    108d:	74 09                	je     1098 <deregister_tm_clones+0x28>
    108f:	ff e0                	jmpq   *%rax
    1091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1098:	c3                   	retq   
    1099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010a0 <register_tm_clones>:
    10a0:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 4010 <__TMC_END__>
    10a7:	48 8d 35 62 2f 00 00 	lea    0x2f62(%rip),%rsi        # 4010 <__TMC_END__>
    10ae:	48 29 fe             	sub    %rdi,%rsi
    10b1:	48 89 f0             	mov    %rsi,%rax
    10b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10b8:	48 c1 f8 03          	sar    $0x3,%rax
    10bc:	48 01 c6             	add    %rax,%rsi
    10bf:	48 d1 fe             	sar    %rsi
    10c2:	74 14                	je     10d8 <register_tm_clones+0x38>
    10c4:	48 8b 05 25 2f 00 00 	mov    0x2f25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    10cb:	48 85 c0             	test   %rax,%rax
    10ce:	74 08                	je     10d8 <register_tm_clones+0x38>
    10d0:	ff e0                	jmpq   *%rax
    10d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <__do_global_dtors_aux>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	80 3d 25 2f 00 00 00 	cmpb   $0x0,0x2f25(%rip)        # 4010 <__TMC_END__>
    10eb:	75 2b                	jne    1118 <__do_global_dtors_aux+0x38>
    10ed:	55                   	push   %rbp
    10ee:	48 83 3d 02 2f 00 00 	cmpq   $0x0,0x2f02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10f5:	00 
    10f6:	48 89 e5             	mov    %rsp,%rbp
    10f9:	74 0c                	je     1107 <__do_global_dtors_aux+0x27>
    10fb:	48 8b 3d 06 2f 00 00 	mov    0x2f06(%rip),%rdi        # 4008 <__dso_handle>
    1102:	e8 29 ff ff ff       	callq  1030 <__cxa_finalize@plt>
    1107:	e8 64 ff ff ff       	callq  1070 <deregister_tm_clones>
    110c:	c6 05 fd 2e 00 00 01 	movb   $0x1,0x2efd(%rip)        # 4010 <__TMC_END__>
    1113:	5d                   	pop    %rbp
    1114:	c3                   	retq   
    1115:	0f 1f 00             	nopl   (%rax)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <frame_dummy>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	e9 77 ff ff ff       	jmpq   10a0 <register_tm_clones>

0000000000001129 <accumulate.1925>:
}

long sum(long *a, long n) {
    long res = 0;
    
    void accumulate(long x) {
    1129:	f3 0f 1e fa          	endbr64 
        res += x;
    112d:	49 01 3a             	add    %rdi,(%r10)
    }
    1130:	c3                   	retq   

0000000000001131 <for_range_do>:
void for_range_do(long *cur, long *end, void (*fn)(long x)) {
    1131:	f3 0f 1e fa          	endbr64 
    1135:	41 54                	push   %r12
    1137:	55                   	push   %rbp
    1138:	53                   	push   %rbx
    1139:	48 89 f5             	mov    %rsi,%rbp
    113c:	49 89 d4             	mov    %rdx,%r12
    while(cur < end)
    113f:	48 39 ef             	cmp    %rbp,%rdi
    1142:	73 0f                	jae    1153 <for_range_do+0x22>
        fn(*cur++);
    1144:	48 8d 5f 08          	lea    0x8(%rdi),%rbx
    1148:	48 8b 3f             	mov    (%rdi),%rdi
    114b:	41 ff d4             	callq  *%r12
    114e:	48 89 df             	mov    %rbx,%rdi
    1151:	eb ec                	jmp    113f <for_range_do+0xe>
}
    1153:	5b                   	pop    %rbx
    1154:	5d                   	pop    %rbp
    1155:	41 5c                	pop    %r12
    1157:	c3                   	retq   

0000000000001158 <sum>:
long sum(long *a, long n) {
    1158:	f3 0f 1e fa          	endbr64 
    115c:	48 83 ec 38          	sub    $0x38,%rsp
    1160:	48 8d 44 24 40       	lea    0x40(%rsp),%rax
    1165:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    116a:	48 89 e0             	mov    %rsp,%rax
    116d:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    1172:	c7 44 24 08 f3 0f 1e 	movl   $0xfa1e0ff3,0x8(%rsp)
    1179:	fa 
    117a:	66 c7 44 24 0c 49 bb 	movw   $0xbb49,0xc(%rsp)
    1181:	48 8d 0d a1 ff ff ff 	lea    -0x5f(%rip),%rcx        # 1129 <accumulate.1925>
    1188:	48 89 4c 24 0e       	mov    %rcx,0xe(%rsp)
    118d:	66 c7 44 24 16 49 ba 	movw   $0xba49,0x16(%rsp)
    1194:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1199:	c7 44 24 20 49 ff e3 	movl   $0x90e3ff49,0x20(%rsp)
    11a0:	90 
    long res = 0;
    11a1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    11a8:	00 

    for_range_do(a, a + n, accumulate);
    11a9:	48 8d 34 f7          	lea    (%rdi,%rsi,8),%rsi
    11ad:	e8 7f ff ff ff       	callq  1131 <for_range_do>
    return res;
}
    11b2:	48 8b 04 24          	mov    (%rsp),%rax
    11b6:	48 83 c4 38          	add    $0x38,%rsp
    11ba:	c3                   	retq   

00000000000011bb <main>:

int main() {
    11bb:	f3 0f 1e fa          	endbr64 
    11bf:	48 83 ec 58          	sub    $0x58,%rsp
    long a[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    11c3:	48 c7 04 24 01 00 00 	movq   $0x1,(%rsp)
    11ca:	00 
    11cb:	48 c7 44 24 08 02 00 	movq   $0x2,0x8(%rsp)
    11d2:	00 00 
    11d4:	48 c7 44 24 10 03 00 	movq   $0x3,0x10(%rsp)
    11db:	00 00 
    11dd:	48 c7 44 24 18 04 00 	movq   $0x4,0x18(%rsp)
    11e4:	00 00 
    11e6:	48 c7 44 24 20 05 00 	movq   $0x5,0x20(%rsp)
    11ed:	00 00 
    11ef:	48 c7 44 24 28 06 00 	movq   $0x6,0x28(%rsp)
    11f6:	00 00 
    11f8:	48 c7 44 24 30 07 00 	movq   $0x7,0x30(%rsp)
    11ff:	00 00 
    1201:	48 c7 44 24 38 08 00 	movq   $0x8,0x38(%rsp)
    1208:	00 00 
    120a:	48 c7 44 24 40 09 00 	movq   $0x9,0x40(%rsp)
    1211:	00 00 
    1213:	48 c7 44 24 48 0a 00 	movq   $0xa,0x48(%rsp)
    121a:	00 00 
    sum(a, 10);
    121c:	48 89 e7             	mov    %rsp,%rdi
    121f:	be 0a 00 00 00       	mov    $0xa,%esi
    1224:	e8 2f ff ff ff       	callq  1158 <sum>
    return 0;
    1229:	b8 00 00 00 00       	mov    $0x0,%eax
    122e:	48 83 c4 58          	add    $0x58,%rsp
    1232:	c3                   	retq   
    1233:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    123a:	00 00 00 
    123d:	0f 1f 00             	nopl   (%rax)

0000000000001240 <__libc_csu_init>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	41 57                	push   %r15
    1246:	4c 8d 3d a3 2b 00 00 	lea    0x2ba3(%rip),%r15        # 3df0 <__frame_dummy_init_array_entry>
    124d:	41 56                	push   %r14
    124f:	49 89 d6             	mov    %rdx,%r14
    1252:	41 55                	push   %r13
    1254:	49 89 f5             	mov    %rsi,%r13
    1257:	41 54                	push   %r12
    1259:	41 89 fc             	mov    %edi,%r12d
    125c:	55                   	push   %rbp
    125d:	48 8d 2d 94 2b 00 00 	lea    0x2b94(%rip),%rbp        # 3df8 <__do_global_dtors_aux_fini_array_entry>
    1264:	53                   	push   %rbx
    1265:	4c 29 fd             	sub    %r15,%rbp
    1268:	48 83 ec 08          	sub    $0x8,%rsp
    126c:	e8 8f fd ff ff       	callq  1000 <_init>
    1271:	48 c1 fd 03          	sar    $0x3,%rbp
    1275:	74 1f                	je     1296 <__libc_csu_init+0x56>
    1277:	31 db                	xor    %ebx,%ebx
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1280:	4c 89 f2             	mov    %r14,%rdx
    1283:	4c 89 ee             	mov    %r13,%rsi
    1286:	44 89 e7             	mov    %r12d,%edi
    1289:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    128d:	48 83 c3 01          	add    $0x1,%rbx
    1291:	48 39 dd             	cmp    %rbx,%rbp
    1294:	75 ea                	jne    1280 <__libc_csu_init+0x40>
    1296:	48 83 c4 08          	add    $0x8,%rsp
    129a:	5b                   	pop    %rbx
    129b:	5d                   	pop    %rbp
    129c:	41 5c                	pop    %r12
    129e:	41 5d                	pop    %r13
    12a0:	41 5e                	pop    %r14
    12a2:	41 5f                	pop    %r15
    12a4:	c3                   	retq   
    12a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
    12ac:	00 00 00 00 

00000000000012b0 <__libc_csu_fini>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	c3                   	retq   

Disassembly of section .fini:

00000000000012b8 <_fini>:
    12b8:	f3 0f 1e fa          	endbr64 
    12bc:	48 83 ec 08          	sub    $0x8,%rsp
    12c0:	48 83 c4 08          	add    $0x8,%rsp
    12c4:	c3                   	retq   
